@using ComicTracker.Web.ViewModels.Home

@model HomePageViewModel

@using static ComicTracker.Common.GlobalConstants;
@using static ComicTracker.Common.HomeConstants;

@{
    this.ViewData["Title"] = "Home";
}

@{
    var previousPage = Model.CurrentPage - 1;
    if (previousPage < 1)
    {
        previousPage = 1;
    }

    var maxPage = Math.Ceiling((double)Model.TotalSeriesCount / SeriesPerPage);
}

<div class="text-center">
    <h1 class="display-4">Welcome to @SystemName!</h1>
    <div class="container">
        @for (int i = 0; i < Model.Series.Count; i += SeriesPerRow)
        {
            // One SeriesPerRow number of series per row
            // i + SeriesPerRow > Model.Count ? Model.Count : i + SeriesPerRow -> Checks where the loop should end
            // If the series are 13 with 4 SeriesPerRow for example,
            // the last row should not loop until 12 + 4 since there will be an IndexOutOfRange exception.
            // Instead, it should loop until the models end rather than overflow the count.
            <div class="row">
                @for (int j = i;
             j < (i + SeriesPerRow > Model.Series.Count ? Model.Series.Count : i + SeriesPerRow);
             j++)
                {
                    <div class="col-6 col-sm-3">
                        <a asp-controller="Series" asp-route-id="@Model.Series[j].Id">
                            <img class="img-thumbnail" src="@Model.Series[j].CoverPath" alt="@CoverNotFoundAltDesc">
                        </a>
                        <div>
                            <p>@Model.Series[j].Name</p>
                            <p>Issues: @Model.Series[j].IssuesCount</p>
                        </div>
                    </div>
                }
            </div>
        }
    </div>
    <div class="row mb-5">
        <div class="col-6">
            <a class="btn btn-primary float-left @(Model.CurrentPage == 1 ? "disabled" : string.Empty)"
               asp-controller="Home"
               asp-action="Index"
               asp-route-search-term="@Model.SearchTerm"
               asp-route-currentPage="@previousPage"><<</a>
        </div>
        <div class="col-6">
            <a class="btn btn-primary float-right @(Model.CurrentPage == maxPage ? "disabled" : string.Empty)"
               asp-controller="Home"
               asp-action="Index"
               asp-route-search-term="@Model.SearchTerm"
               asp-route-currentPage="@(Model.CurrentPage + 1)">>></a>
        </div>
    </div>
</div>
